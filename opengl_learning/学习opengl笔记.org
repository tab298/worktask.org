* 学习opengl的地图路线
** 了解基本编程细节
   [[link file:基本.org]]
** 三维几何图形描述，绘制到屏幕。
** 三维到二维之前如何变换，如何控制变换，显示特定视图。
** 颜色，物体着色方法。
** 光照条件，反应（反射，吸收光线）
** 逼真场景的基本技巧（alpha混合，抗锯齿，大气效果，多变形偏移）
** 提高性能
** 操作位图，图像二维数据
** 纹理：一维，二维，三维的映射。
** 缓冲区 隐藏表面消除，模板，运动模糊，景深聚焦
** GLU工具函数库。分割化，二次方程
** 曲线和表面的高级技巧
** 选择机制 反馈机制
** 技巧
** GLSL着色语言 提高图像质量


推荐 《computer Graphics ：Principles and Practice》 James D.Foley
《3d computer Graphics 》 Andrew SGlassner
